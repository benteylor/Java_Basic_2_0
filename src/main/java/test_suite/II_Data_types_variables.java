package test_suite;

public class II_Data_types_variables {

    public static void main(String[] args) {

        /*Переменные - это ячейки памяти кот хранят в себе информацию, с которой потом можно взаимодействовать.
        Для создания переменной, нам необходимо сначала прописать тип данных переменной */

        int //тип данных*/ num /*название переменной

        num = 5; //обращение к переменной, чтобы задать значение и 5 это само значение переменной (но это длинная структура, можно короче)

        int five = 5; //такая структура более короткая и более привычная, задавания значения переменной, всё в одной строчке

        //как вывести переменную на экран?

        System.out.print(num); //таким образом мы выводим значение нашей переменной в консоль

        five = 6; //таким образом можно изменить значение переменной и вывести её в консоль, потому как раньше переменная five имела значение 5

        System.out.print(five);

        //какие бывают типы данных для нашей переменной?

        // типы данных с целыми числами:
        // byte  -128 до 127 (требует один байт оперативной памяти компьютера)
        // short -32768 до 32767 (требует два байта)
        // int   -2147483648 до 2147483647 (требует четыре байта)
        // long  - 9223372036854775808 до 9223372... (требует восемь байтов)

        byte num1 = 127;        //1byte
        short num2 = 23767;     //2byte
        int num3 = -314758364;  //4byte
        long num4 = 922337202;  //8byte

        //типы данных которые имеют значения чисел с точкой:
        float num5 = 5.505f;    //4byte
        double num6 = 5.50555f; //8byte

        //символы и текст:
        char sym = 't';         //даёт возможность работать с одним (символ/буква/спец.знак), который должен находиться в одинарных кавычках
        String text = "text";   //если есть необходимость работать с полноценным текстом, располагается в двойных кавычках

        //логический тип данных
        boolean isHappy = true; //тип данных который анализирует переменную как true/false, используется в условных конструкциях и циклах

    }

}
